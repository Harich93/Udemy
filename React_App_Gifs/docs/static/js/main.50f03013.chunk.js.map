{"version":3,"sources":["components/AddCategory.js","helpers/getgifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategoria","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categorias","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","defaulCategoria","cats","ReactDOM","render","document","getElementById"],"mappings":"mMA0CeA,EAvCK,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEnB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACI,mCACI,sBAAMC,SAZM,SAAEC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC7CN,EAAc,MAOd,SAEI,uBACIO,KAAK,OACLC,MAAST,EACTU,SAtBU,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,e,+BCcjBG,EArBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAENC,EAFM,iDAE2CC,UAAWH,GAFtD,+DAGMI,MAAMF,GAHZ,cAGNG,EAHM,gBAISA,EAAIC,OAJb,uBAILC,EAJK,EAILA,KACDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CAEHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAX9B,kBAiBLM,GAjBK,4CAAH,sDCiBEO,EAfO,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAE5B,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QC2BFO,EA9BC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,UAEhB,ECJwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAW,WAEPxB,EAASC,GACRwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIlB,CAAEpB,IAEEqB,EDfwBK,CAAc1B,GAAjCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCACA,qBAAIJ,UAAU,2CAAd,cAA4DhB,EAA5D,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEQnBgB,EAxBM,SAAC,GAA+B,IAAD,IAA3BC,uBAA2B,MAAT,GAAS,EAEhD,EAAmC1C,mBAAU0C,GAA7C,mBAAOlC,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,aAAeA,IAC5B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAoB,GAAI,OAChB,cAAC,EAAD,CAEI7B,UAAY6B,GADNA,Y,MCblCC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.50f03013.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategoria }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n\r\n    }\r\n\r\n    const handleSubmit =( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategoria( categorias => [ inputValue, ...categorias] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={ handleSubmit }>\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    value= { inputValue }\r\n                    onChange={ handleInputChange }\r\n                />\r\n            </form>\r\n            \r\n\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategoria: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\nconst getGifs = async( categoria ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=MQa7zXrKEZ15mvl3a6fsjB1VUvvXH0PU`\r\n    const res = await fetch(url)\r\n    const {data} = await res.json();\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n\r\nexport default getGifs;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ( ({ title, url }) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInTopLeft'>\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n});\r\n\r\nGifGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifGridItem from './GifGridItem';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GifGrid = ( { categoria }) => {\r\n\r\n    const {data:images, loading} = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeInTopLeft'> { categoria } </h3>\r\n        \r\n        { loading && <p className='animate__animated animate__flash'>Cargando...</p> }\r\n\r\n        <div className='card-grid'>\r\n            \r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                     />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n    categoria: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid\r\n","import { useState, useEffect } from \"react\"\r\nimport getGifs from \"../helpers/getgifs\"\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( categoria )\r\n        .then( imgs => {       \r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            });\r\n        });\r\n \r\n    }, [ categoria ])\r\n\r\n    return state; \r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = ( { defaulCategoria = [] }) => {\r\n\r\n    const [categorias, setCategoria] = useState( defaulCategoria );\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategoria={ setCategoria } />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categorias.map( cats => (\r\n                        <GifGrid \r\n                            key={ cats }\r\n                            categoria={ cats }\r\n                        />\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}