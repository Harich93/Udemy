{"version":3,"sources":["types/types.js","reducers/notesReducers.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebaseConfig.js","actions/ui.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegistrerScreen.js","routers/AuthRouter.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","note","map","id","filter","store","createStore","applyMiddleware","thunk","firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","GoogleAuthProvider","setCustomParameters","prompt","setError","err","removeError","finishLoading","startLoginEmailPass","email","pass","dispatch","signInWithEmailAndPassword","then","user","login","catch","e","console","log","Swal","fire","message","logout","notesCleaning","useForm","useState","values","setValues","reset","newState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","password","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegistrerScreen","password2","trim","createUserWithEmailAndPassword","a","updateProfile","startRegisterWhithEmailPassword","AuthRouter","path","component","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","collection","get","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","setNotes","savedNote","getState","noteToFirestore","doc","update","arch","refreshNote","title","deleteNote","NotesAppBar","date","moment","format","style","display","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","url","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","activeUrl","useEffect","current","delete","NothingSelected","JournalEntry","noteDate","backgroundImage","backgroundSize","JournalEntries","Sidebar","signOut","newNote","Date","getTime","add","JournalScreen","PrivateRoute","isAuthenticate","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4b583104.chunk.js","sourcesContent":["\r\nexport const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesDeleted: '[Notes] Deleted note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load note',\r\n    notesUpdated: '[Notes] Update note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesLogoutCleaning: '[Notes] Cleaning logout',\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: false\r\n}\r\n\r\nexport const notesReducers = ( state = initialState, action) => {\r\n    \r\n    switch ( action.type ) {\r\n        \r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n\r\n        case types.notesDeleted:\r\n            return {\r\n                ...state,\r\n                active: false,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning: \r\n            return {\r\n                ...state,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n ","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = { \r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n               ...state,\r\n               msgError: action.payload \r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null \r\n            }\r\n\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n\r\n\r\n        default:\r\n           return state;\r\n    }\r\n}","\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducers } from '../reducers/notesReducers';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    note: notesReducers\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = ( state = {}, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n    \r\n        case types.logout:\r\n            return { };\r\n        \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n  const firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY ,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN ,\r\n    projectId: process.env.REACT_APP_PROJECTID ,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET ,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID ,\r\n    appId: process.env.REACT_APP_APPID \r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  const db = firebase.firestore();\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n  googleAuthProvider.setCustomParameters({\r\n    prompt: 'select_account'\r\n  });\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n}); ","import Swal from 'sweetalert2';\r\nimport { types } from \"../types/types\";\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { finishLoading, startLoading } from \"./ui\";\r\n\r\nexport const startLoginEmailPass = ( email, pass ) => {\r\n    return ( dispatch ) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        return firebase.auth().signInWithEmailAndPassword( email, pass )\r\n        .then( ({ user }) => {\r\n            dispatch( login( user.uid, user.displayName ) );\r\n            dispatch( finishLoading() );\r\n        })\r\n        .catch( e => {\r\n            console.log( e );\r\n            dispatch( finishLoading() );\r\n            Swal.fire( 'Error', e.message, 'error' );\r\n        })\r\n    }\r\n}\r\n\r\nexport const startRegisterWhithEmailPassword = ( email, password, name ) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n        .then( async({ user }) => {\r\n\r\n            await user.updateProfile({ displayName: name });\r\n\r\n            dispatch( \r\n                login(user.uid, user.displayName) \r\n            )\r\n        })\r\n        .catch( console.log )\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({ user }) => {\r\n            dispatch( \r\n                login(user.uid, user.displayName) \r\n            )\r\n        } )\r\n\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n        \r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n\r\n}); \r\n\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch( logout() );\r\n        dispatch( notesCleaning() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\nconst notesCleaning = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newState = initialState ) =>{\r\n        setValues( newState );\r\n    } \r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n    };\r\n \r\n    return [ values, handleInputChange, reset, setValues ];\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startGoogleLogin, startLoginEmailPass } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError, loading } = useSelector( state => state.ui );\r\n\r\n    const [ values, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n    \r\n    const { email, password } = values;\r\n    \r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if ( isFormValid() && !msgError )\r\n            dispatch( startLoginEmailPass( email, password) );\r\n\r\n        \r\n    }\r\n        \r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n    \r\n    const isFormValid = () => {\r\n\r\n        if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password.length < 5 ) {\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className='auth__title'>Login</h3>\r\n            {\r\n                msgError &&\r\n                (\r\n                    <div className='auth__alert-error'>\r\n                        {msgError}\r\n                    </div>\r\n                )\r\n            }\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className='animate__animated animate__fadeIn animate__fast'\r\n            >\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    autoComplete='off'\r\n                    className='auth__input'\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                    \r\n                />\r\n\r\n                <input \r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    className='auth__input'\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block'\r\n                    disabled={ loading }\r\n                >Login</button>\r\n\r\n                <div \r\n                    className='auth__social-networks'\r\n                    onClick={ handleGoogleLogin }\r\n                >\r\n                    <p>Login whit social networks</p>\r\n                    \r\n                    <div className=\"google-btn\" >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link className='link' to='/auth/register' >\r\n                    Create new account\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm'\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError} from '../../actions/ui'\r\nimport { startRegisterWhithEmailPassword } from '../../actions/auth';\r\n\r\n\r\nexport const RegistrerScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError } = useSelector(  state => state.ui )\r\n\r\n    const [ values, handleInputChange ] = useForm({ \r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = values;\r\n\r\n    const handleRegister = ( e ) => { \r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWhithEmailPassword( email, password, name ) );\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if( name.trim().length <= 1 ) {\r\n            dispatch( setError('Name is required') )\r\n            return false\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError('Email is not valid') );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError('Password should be at least 6 characters and match each other') );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true;\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            <h3 className='auth__title'>Register</h3>\r\n\r\n            {\r\n                msgError &&\r\n                (\r\n                    <div className='auth__alert-error'>\r\n                        { msgError }\r\n                    </div>\r\n                )\r\n\r\n            }\r\n\r\n            <form \r\n                onSubmit={ handleRegister }\r\n                className='animate__animated animate__fadeIn animate__fast'    \r\n            >\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Name'\r\n                    name='name'\r\n                    value={ name }\r\n                    autoComplete='off'\r\n                    className='auth__input'\r\n                    onChange={ handleInputChange }\r\n                    \r\n                />\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Email'\r\n                    name='email'\r\n                    value={ email }\r\n                    autoComplete='off'\r\n                    className='auth__input'\r\n                    onChange={ handleInputChange }\r\n                    \r\n                />\r\n\r\n                <input \r\n                    type='password'\r\n                    placeholder='Password'\r\n                    name='password'\r\n                    value={ password }\r\n                    className='auth__input'\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type='password'\r\n                    placeholder='Confirm password'\r\n                    name='password2'\r\n                    value={ password2 }\r\n                    className='auth__input'\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='btn btn-primary btn-block mb-5 mt-1'\r\n                >Register</button>\r\n\r\n                <Link className='link' to='/auth/login' >\r\n                    Already registered?\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegistrerScreen } from '../components/auth/RegistrerScreen';\r\nimport {\r\n    Switch,\r\n    Route,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className='auth__main'>\r\n            <div className='auth__box-container'>\r\n                <Switch>\r\n                    <Route path='/auth/login' component={ LoginScreen } />\r\n                    <Route path='/auth/register' component={ RegistrerScreen } />\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const fileUpload = async( file ) => {\r\n\r\n    const couldUrl = 'https://api.cloudinary.com/v1_1/harich-projects-react/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch( couldUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url\r\n        } else {\r\n            return null;\r\n        }\r\n\r\n    } catch ( error ) {\r\n        throw error;\r\n    }\r\n\r\n\r\n}","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n\r\n    const notes =[];\r\n    \r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id: snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n\r\n\r\n    return notes;\r\n}","\r\nimport Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const stratNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection( `${ uid }/journal/notes` ).add( newNote )\r\n        \r\n        dispatch( activeNote( doc.id, newNote) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n    }\r\n\r\n}\r\n \r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote =( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ) );\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const savedNote = ( note ) => {\r\n\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n        // !note.url && delete note.url\r\n        \r\n\r\n        const arch = await db.doc( `${ uid }/journal/notes/${ note.id }` )\r\n            .update( noteToFirestore )\r\n\r\n        console.log( arch )\r\n\r\n        dispatch( refreshNote( note.id, note ) );\r\n        Swal.fire( 'Saved', note.title, 'success');\r\n    } \r\n}\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload: {\r\n        id,\r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n})\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async( dispatch, getState ) => {\r\n        const { active: activeNote } = getState().note;\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please await...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            willOpen: () => {\r\n                Swal.showLoading();\r\n            },   \r\n        });\r\n        \r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n        \r\n        dispatch( savedNote( activeNote ) );\r\n\r\n        Swal.close();\r\n    }\r\n}\r\n\r\nexport const startDeleting = ( id ) => {\r\n    console.log(id)\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth;\r\n        \r\n        await db.doc( `${ uid }/journal/notes/${ id }` ).delete()\r\n            .then( () => Swal.fire( 'Delete', id, 'success') )\r\n            .catch( console.log )\r\n\r\n        dispatch( deleteNote(id) ); \r\n    }\r\n\r\n}\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDeleted,\r\n    payload: id\r\n})\r\n\r\nexport const logoutNote = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savedNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n    \r\n    const date = moment().format( 'LL' );\r\n\r\n    const note = useSelector(state => state.note.active );\r\n    \r\n    const dispatch = useDispatch();\r\n    \r\n    const handleSave = () => {\r\n\r\n        dispatch( savedNote( note ) );\r\n    }\r\n\r\n    const handleUpdatePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n    \r\n    const handleFileChanged = ( e ) => {\r\n        const file = e.target.files[0];\r\n\r\n        file && dispatch( startUploading( file ) );\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            <span>{ date }</span>\r\n\r\n            <input\r\n                id='fileSelector'\r\n                name='file'\r\n                type='file'\r\n                style={ { display: 'none' } }\r\n                onChange={ handleFileChanged }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className='btn'\r\n                    onClick={ handleUpdatePicture }    \r\n                > \r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className='btn'\r\n                    onClick={ handleSave }\r\n                > \r\n                    Save\r\n                </button>\r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const note = useSelector(state => state.note.active );\r\n    const [ values, handleInputChange, reset ] = useForm(note);\r\n    const { title, body, url } = values;\r\n\r\n    const activeId = useRef( note.id );\r\n    const activeUrl = useRef( note.url );\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( note.id ) );\r\n    }\r\n    \r\n    useEffect(() => {\r\n\r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n        if ( note.url !== activeUrl.current ) {\r\n            reset( note );\r\n            activeUrl.current = note.url;\r\n        }\r\n\r\n    }, [note, reset, note.url ]);\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( activeNote( values.id, { ...values } ) );\r\n\r\n    }, [values, dispatch,] )\r\n    \r\n    return (\r\n        <div className='notes___main-content'>\r\n            <NotesAppBar />\r\n\r\n            <div className='notes__content'>\r\n\r\n                    <input \r\n                        type='text'\r\n                        name='title'\r\n                        placeholder='Some awasome title'\r\n                        className='notes__title-input'\r\n                        value={ title }\r\n                        autoComplete='off'\r\n                        onChange={ handleInputChange }\r\n                    />\r\n\r\n                    <textarea\r\n                        placeholder='What happened today'\r\n                        name='body'\r\n                        className='notes__textarea'\r\n                        value={ body }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n\r\n                    {\r\n                        url &&\r\n                            <div className='notes__image'>\r\n                                <img\r\n                                    src={ url }\r\n                                    alt='Imagen nota'\r\n                                />\r\n                            </div>\r\n                    }\r\n\r\n             \r\n            </div>\r\n            <button\r\n                className='btn btn-delete'\r\n                onClick={ handleDelete }\r\n            >Delete</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content'>\r\n            <p>\r\n               Selected somethig\r\n               <br />\r\n               or create an entry!\r\n            </p>\r\n            <i className='far fa-star fa-4x mt-5'></i>\r\n        </div>\r\n    )\r\n}\r\n","import moment from 'moment'\r\nimport React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\nexport const JournalEntry = ( note ) => {\r\n\r\n    const {id, body, date, title, url } = note\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate = moment(date);\r\n    \r\n    const handleEditNote = () => {\r\n        dispatch( activeNote( id, note ) );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className='journal__entry pointer animate__animated animate__fadeIn'\r\n            onClick={ handleEditNote }\r\n        >\r\n\r\n            {\r\n                url &&\r\n                    <div\r\n                        className='journal__entry-picture'\r\n                        style={ { \r\n                            backgroundImage: `URL(${ url })`, \r\n                            backgroundSize: 'cover'\r\n                        } }\r\n                    ></div>\r\n            }\r\n\r\n\r\n                <div className='journal__entry-body'>\r\n                    <p className='journal__entry-title'>  \r\n                        { title }\r\n                    </p>\r\n                    <p className='journal__entry-content'>  \r\n                        { body }\r\n                    </p>\r\n                </div>\r\n\r\n                <div className='journal__entry-date-box'>\r\n                    <span>{ noteDate.format('dddd') }</span>\r\n                    <h4>{ noteDate.format('Do') }</h4>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes }  = useSelector(state => state.note)\r\n\r\n    return (\r\n        <div className='journal__entries  animate__animated animate__fadeInLeft animate__slow'>\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={ note.id } \r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport { logoutNote, stratNewNote } from '../../actions/notes'\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n        dispatch( logoutNote() );\r\n    }\r\n\r\n    const handleAddNew = () => [\r\n        dispatch( stratNewNote() )\r\n    ]\r\n\r\n    return (\r\n        <aside className='journal__sidebar'>\r\n            <div className='journal__sidebar-navbar mt-3'>\r\n                <h3>\r\n                    <i className='far fa-user-circle fs-2' />\r\n                    <span className='fs-2'> { name } </span>\r\n                </h3>\r\n\r\n                <button\r\n                    className='btn btn-logout'\r\n                    onClick={ handleLogout }\r\n                >Logout <i className=\"fas fa-sign-out-alt fs-1\"></i></button>\r\n            </div>\r\n\r\n            <div className='journal__new-entry'>\r\n                <i \r\n                    className='far fa-calendar-plus fa-5x' \r\n                    onClick={ handleAddNew } \r\n                />\r\n                <p className='mt-5'>New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.note)\r\n\r\n    return (\r\n        <div className='journal__main-content'>\r\n            <Sidebar />\r\n\r\n            <main>\r\n                {\r\n                    active \r\n                      ? <NoteScreen />\r\n                      : <NothingSelected />\r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticate,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route\r\n            { ...rest }\r\n            component={ ( props ) => (\r\n                isAuthenticate\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to='/auth/login' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticate: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticate,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route \r\n            { ...rest }\r\n            component={ (props) => (\r\n                !isAuthenticate\r\n                    ? <Component { ...props } />\r\n                    : <Redirect to='/' />\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticate: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { useDispatch} from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n  \r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState( true );\r\n\r\n    const [isLoggedIn, setIsLoggedIn] = useState( false );\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => { \r\n            \r\n            if( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n            } \r\n            else {\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setChecking( false );\r\n        })\r\n\r\n    }, [dispatch, setChecking, setIsLoggedIn]);\r\n\r\n    if( checking ) \r\n        return (<h1>Loaging...</h1>)\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    \r\n                    <PublicRoute \r\n                        path='/auth' \r\n                        isAuthenticate={ isLoggedIn }    \r\n                        component={ AuthRouter } \r\n                    />\r\n                    \r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/' \r\n                        isAuthenticate={ isLoggedIn }\r\n                        component={ JournalScreen } \r\n                    />\r\n\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport { store } from './store/store'\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss'\n\nReactDOM.render(\n\n    <JournalApp />,\n\n  document.getElementById('root')\n);\n"],"sourceRoot":""}